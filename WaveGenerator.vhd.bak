library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL; 

entity squareWave is
port (clkDiv     	: in std_logic;
		nrst			: in std_logic;
		en		  		: in std_logic;
		note			: in std_logic_vector(12 downto 0);
      i_data 		: out std_logic_vector(8 downto 0));
end squareWave;

architecture Behavioral of squareWave is
type C4sqr is array (0 to 95) of integer range 0 to 255;
signal iC4sqr : integer range 0 to 95 := 0;
signal C4square : C4sqr :=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255);


type C4sn is array (0 to 95) of integer range 0 to 255;
signal iC4sn : integer range 0 to 95 := 0;
signal C4sine : C4sn :=(127,135,144,152,160,168,176,184,191,198,205,211,218,223,228,233,238,242,245,248,250,252,253,254,254,254,253,251,249,246,243,240,236,231,226,220,215,208,202,195,187,180,172,164,156,148,140,131,123,114,106,98,90,82,74,67,59,52,46,39,34,28,23,18,14,11,8,5,3,1,0,0,0,1,2,4,6,9,12,16,21,26,31,36,43,49,56,63,70,78,86,94,102,110,119,127);
begin

process(clkDiv,en,nrst)
begin

	if nrst = '0' then
		i_data <= "000000000";
		iC4sqr <= 0;
	elsif rising_edge(clkDiv) then
		if en = '0' then	
			case note is		
				when "1111111111110" =>  --dataout <= C4square(iC4); 
												 i_data <= std_logic_vector(to_unsigned( C4square(iC4sqr),9));
												 iC4sqr <= iC4sqr + 1; 
												 if(iC4sqr = 94) then 
												 iC4sqr <= 0; 
												 end if;								 -- C4
				when "1111111111101" => i_data <= "000001001";--max_count := 75843; -- D4
				when "1111111111011" => i_data <= "000000000";--max_count := 75843; -- D5
				when "1111111110111" => i_data <= "000000000";--max_count := 71586; -- F4
				when "1111111101111" => i_data <= "000000000";--max_count := 63776; -- G4
				when "1111111011111" => i_data <= "000000000";--max_count := 56818; -- A4
				
				when "1111110111111" => i_data <= "000000000";--max_count := 75843;
												 
				when "1111101111111" => i_data <= "000000000";--max_count := 47778; -- C5
				when "1111011111111" => i_data <= "000000000";--max_count := 42566; -- D5
				when "1110111111111" => i_data <= "000000000";--max_count := 37922; -- E5
				when "1101111111111" => i_data <= "000000000";--max_count := 35793; -- F5
				when "1011111111111" => i_data <= "000000000";--max_count := 31888; -- G5
				when "0111111111111" => i_data <= "000000000";--max_count := 75843;
				when others =>	i_data <= "000000000";--max_count := 0;	 -- no squarewave
			end case;
		else
		case note is		
			when "1111111111110" =>  --dataout <= C4sine(iC4); 
											 i_data <= std_logic_vector(to_unsigned( C4sine(iC4sn),9));
											 iC4sn <= iC4sn + 1; 
											 if(iC4sn = 94) then 
											 iC4sn <= 0; 
											 end if;								 -- C4
			when "1111111111101" => i_data <= "000001001";--max_count := 75843; -- D4
			when "1111111111011" => i_data <= "000000000";--max_count := 75843; -- D5
			when "1111111110111" => i_data <= "000000000";--max_count := 71586; -- F4
			when "1111111101111" => i_data <= "000000000";--max_count := 63776; -- G4
			when "1111111011111" => i_data <= "000000000";--max_count := 56818; -- A4
			
			when "1111110111111" => i_data <= "000000000";--max_count := 75843;
											 
			when "1111101111111" => i_data <= "000000000";--max_count := 47778; -- C5
			when "1111011111111" => i_data <= "000000000";--max_count := 42566; -- D5
			when "1110111111111" => i_data <= "000000000";--max_count := 37922; -- E5
			when "1101111111111" => i_data <= "000000000";--max_count := 35793; -- F5
			when "1011111111111" => i_data <= "000000000";--max_count := 31888; -- G5
			when "0111111111111" => i_data <= "000000000";--max_count := 75843;
			when others =>	i_data <= "000000000";--max_count := 0;	 -- no squarewave
		end case;
		end if;	
	end if;	
		
end process;
end Behavioral;